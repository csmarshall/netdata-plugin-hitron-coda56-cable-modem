# Netdata python.d.plugin configuration for Hitron CODA cable modem
# This file configures the comprehensive cable modem monitoring plugin
#
# Place this file in your Netdata python.d configuration directory:
# - Package install: /etc/netdata/python.d/hitron_coda.conf
# - Snap install: /var/snap/netdata/current/etc/netdata/python.d/hitron_coda.conf
# - Docker: Mount to /etc/netdata/python.d/hitron_coda.conf

# Global plugin settings
# update_every: How often to collect data (in seconds)
# priority: Chart priority (lower = higher priority)
# penalty: Whether to apply penalty for failed updates
update_every: 15
priority: 60000
penalty: yes

# Enable detailed debug logging (set to 'no' for production)
# debug: yes

# ----------------------------------------------------------------------
# JOBS (data collection sources)
# Each job represents a modem to monitor

# Primary modem configuration
localhost:
  name: 'hitron_coda'
  
  # Modem IP address - change this to match your modem
  host: 'https://192.168.100.1'
  
  # How often to collect data from this modem (in seconds)
  # Lower values = more responsive monitoring, higher CPU usage
  # Recommended: 10 seconds for optimal balance of responsiveness and efficiency
  update_every 20:

# ----------------------------------------------------------------------
# ADDITIONAL CONFIGURATION EXAMPLES

# Example: Custom IP address (if your modem uses a different IP)
# custom_ip:
#   name: 'hitron_coda_custom'
#   host: 'https://192.168.1.1'
#   update_every: 10

# Example: Multiple modems (if you have more than one to monitor)
# modem_backup:
#   name: 'hitron_coda_backup'
#   host: 'https://192.168.200.1'
#   update_every: 15

# Example: Different update frequency for less critical modem
# modem_guest:
#   name: 'hitron_coda_guest'
#   host: 'https://192.168.50.1'
#   update_every: 30

# ----------------------------------------------------------------------
# PERFORMANCE TUNING NOTES
#
# For single modem monitoring:
# - update_every: 10 seconds (optimal balance of responsiveness and efficiency)
# - This will collect 206+ metrics every 10 seconds
# - CPU usage: minimal on modern systems
# - Modem impact: reduced load compared to 5s intervals
#
# For multiple modems:
# - Stagger update_every values (10, 15, 20) to spread load
# - Consider increasing update_every for less critical modems
#
# For resource-constrained systems:
# - Increase update_every to 15-30 seconds
# - Monitor system load and adjust accordingly
#
# Memory usage:
# - Each modem uses ~2-5MB RAM for metric storage
# - OFDM channels require slightly more memory than QAM
#
# Network usage:
# - Each update makes 5 HTTP requests to the modem
# - Total data: ~5-10KB per update cycle
# - Negligible network impact

# ----------------------------------------------------------------------
# TROUBLESHOOTING
#
# If the plugin is not working:
# 1. Verify modem IP: curl -k https://192.168.100.1/data/dsinfo.asp
# 2. Check Netdata logs: journalctl -u netdata -f
# 3. Test plugin manually: python3 /path/to/hitron_coda.chart.py
# 4. Enable debug logging by uncommenting 'debug: yes' above
#
# Common issues:
# - Wrong IP address in 'host' parameter
# - Modem not accessible from Netdata server
# - SSL certificate issues (handled automatically)
# - Timeout issues (modem responding slowly)
#
# For support: https://github.com/yourusername/netdata-hitron-plugin

# ----------------------------------------------------------------------
# FEATURE COVERAGE
#
# This plugin monitors:
# ✅ 31 Downstream QAM channels (power, SNR, frequency, throughput, errors)
# ✅ 5 Upstream QAM channels (power, frequency, bandwidth)
# ✅ DOCSIS 3.1 OFDM channels (downstream power, SNR, throughput)
# ✅ DOCSIS 3.1 OFDM upstream (if available)
# ✅ System uptime and link speed
# ✅ Real-time error rate monitoring
# ✅ Channel-specific performance tracking
#
# Charts created (14 total):
# 1. Downstream QAM Power Levels
# 2. Downstream QAM SNR
# 3. Downstream QAM Frequencies
# 4. Downstream Data Throughput
# 5. Downstream Corrected Errors
# 6. Downstream Uncorrected Errors
# 7. Upstream QAM Power Levels
# 8. Upstream QAM Frequencies
# 9. Upstream Channel Bandwidth
# 10. OFDM Downstream Power Levels
# 11. OFDM Downstream SNR
# 12. OFDM Downstream Throughput
# 13. System Uptime
# 14. Link Speed
