# Enhanced Netdata python.d.plugin configuration for Hitron CODA cable modem
# This file configures the comprehensive cable modem monitoring plugin with reliability features
#
# Place this file in your Netdata python.d configuration directory:
# - Package install: /etc/netdata/python.d/hitron_coda.conf
# - Snap install: /var/snap/netdata/current/etc/netdata/python.d/hitron_coda.conf
# - Docker: Mount to /etc/netdata/python.d/hitron_coda.conf

# Global plugin settings
# update_every: How often to collect data (in seconds)
# priority: Chart priority (lower = higher priority)
# penalty: Whether to apply penalty for failed updates
update_every: 60
priority: 60000
penalty: yes

# Enable detailed debug logging (set to 'no' for production)
# debug: yes

# ----------------------------------------------------------------------
# JOBS (data collection sources)
# Each job represents a modem to monitor

# Primary modem configuration with enhanced reliability
localhost:
  name: 'hitron_coda'
  
  # Modem IP address - change this to match your modem
  host: 'https://192.168.100.1'
  
  # Device display name - appears in chart titles and Netdata menu
  # Can be anything you want - examples below
  device_name: 'Hitron CODA56 Cable Modem'
  
  # How often to collect data from this modem (in seconds)
  # Increased to 20 seconds for better reliability with slower modems
  update_every: 60
  
  # Request timeout (optional) - auto-calculated as 70% of update_every if not specified
  # timeout: 10
  
  # Maximum retry attempts for failed requests (optional)
  # max_retries: 3

# ----------------------------------------------------------------------
# RELIABILITY CONFIGURATION EXAMPLES

# Example: Conservative settings for slower/older modems
# conservative:
#   name: 'hitron_coda_slow'
#   host: 'https://192.168.100.1'
#   update_every: 30
#   timeout: 15
#   max_retries: 5

# Example: Aggressive settings for fast, reliable modems
# aggressive:
#   name: 'hitron_coda_fast'
#   host: 'https://192.168.100.1'
#   update_every: 10
#   timeout: 5
#   max_retries: 2

# Example: Custom device names for multiple modems
# main_modem:
#   name: 'hitron_coda_main'
#   host: 'https://192.168.100.1'
#   device_name: 'Living Room Internet'
#   update_every: 20

# backup_modem:
#   name: 'hitron_coda_backup'
#   host: 'https://192.168.200.1'
#   device_name: 'Guest WiFi Modem'
#   update_every: 25

# office_modem:
#   name: 'hitron_coda_office'
#   host: 'https://10.0.1.1'
#   device_name: 'Office Network Gateway'
#   update_every: 20

# ----------------------------------------------------------------------
# PERFORMANCE TUNING NOTES
#
# Timeout Settings:
# - Auto-calculated as 70% of update_every (min 5s, max 15s) if not specified
# - Manual override: timeout: 5-15 seconds recommended
# - Lower timeout = faster failure detection, but may cause false failures
# - Higher timeout = more reliable with slow modems, but slower failure detection
#
# Retry Settings:
# - max_retries: 2-5 recommended
# - Lower retries = faster failure response, less modem load
# - Higher retries = more reliable data collection, but may overload slow modems
#
# Update Frequency:
# - update_every: 15-30 seconds recommended for reliability
# - 20 seconds provides good balance of responsiveness and reliability
# - Shorter intervals may overwhelm slower modems
#
# For single modem monitoring:
# - update_every: 20 seconds (reliable balance)
# - timeout: 10 seconds (handles most modems)
# - max_retries: 3 (good fault tolerance)
#
# For multiple modems:
# - Stagger update_every values (20, 25, 30) to spread load
# - Consider increasing timeout for less critical modems
#
# For resource-constrained systems:
# - Increase update_every to 30-60 seconds
# - Reduce max_retries to 2
# - Monitor system load and adjust accordingly
#
# Network considerations:
# - Each update cycle makes 5-6 HTTP requests to the modem
# - With retries, failed requests may make up to 15-18 requests
# - Total data per cycle: ~10-20KB including retries
# - Cache-busting URLs prevent stale data issues

# ----------------------------------------------------------------------
# TROUBLESHOOTING WITH NEW FEATURES
#
# The enhanced plugin includes built-in health monitoring:
# 1. Check the "Plugin Health & Reliability" chart in Netdata
# 2. Monitor success rate, response times, and failure patterns
# 3. Adjust timeout and retry settings based on observed performance
#
# If success rate is low (<90%):
# - Increase timeout value
# - Increase max_retries
# - Check network connectivity to modem
#
# If response times are high (>2000ms):
# - Check modem performance
# - Reduce update frequency
# - Consider modem firmware updates
#
# If consecutive failures are high:
# - Modem may be overloaded or failing
# - Increase update_every interval
# - Check modem logs for issues
#
# Common issues and solutions:
# - Timeout errors: Increase 'timeout' value
# - Connection refused: Check modem IP address in 'host'
# - High failure rate: Increase 'max_retries' and 'timeout'
# - Slow responses: Increase 'update_every' interval
#
# For support: https://github.com/yourusername/netdata-hitron-plugin

# ----------------------------------------------------------------------
# NEW HEALTH MONITORING FEATURES
#
# The enhanced plugin now includes:
# ✅ Built-in reliability monitoring with retry logic
# ✅ Configurable timeouts and retry attempts
# ✅ Cache-busting URLs (adds ?_=timestamp like web interface)
# ✅ Comprehensive error logging with timestamps
# ✅ Plugin health chart showing success rates and response times
# ✅ Per-endpoint statistics and failure tracking
# ✅ Exponential backoff for failed requests
# ✅ Active endpoint monitoring
#
# Health metrics included:
# 1. Success Rate: Percentage of successful requests
# 2. Average Response Time: Response time across all endpoints (ms)
# 3. Consecutive Failures: Current streak of failed collection cycles
# 4. Active Endpoints: Number of endpoints responding within 5 minutes
#
# Charts created (15 total, including new health chart):
# 1. Plugin Health & Reliability (NEW)
# 2. Downstream QAM Power Levels
# 3. Downstream QAM SNR
# 4. Downstream QAM Frequencies
# 5. Downstream Data Throughput
# 6. Downstream Corrected Errors
# 7. Downstream Uncorrected Errors
# 8. Upstream QAM Power Levels
# 9. Upstream QAM Frequencies
# 10. Upstream Channel Bandwidth
# 11. OFDM Downstream Power Levels
# 12. OFDM Downstream SNR
# 13. OFDM Downstream Throughput
# 14. System Uptime
# 15. Link Speed

# ----------------------------------------------------------------------
# CHART CATEGORIZATION (addresses menu placement)
#
# Charts are now properly categorized:
# - plugin_monitoring: Plugin Health chart
# - cable_modem_signal: Power and SNR charts
# - cable_modem_performance: Frequency, throughput, bandwidth charts
# - cable_modem_errors: Error rate charts
# - cable_modem_ofdm: DOCSIS 3.1 OFDM charts
# - cable_modem_system: Uptime and link speed charts
#
# This should place the plugin in the "Remote Devices" section of Netdata
